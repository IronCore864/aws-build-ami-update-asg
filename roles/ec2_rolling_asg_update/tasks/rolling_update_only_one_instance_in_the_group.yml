---
- name: rolling update asg, with only 1 instance in the asg, no replace instance now
  ec2_asg:
    name: "{{ asg_name }}"
    launch_config_name: "{{ new_lc_name }}"
    min_size: "{{ asg_min_size }}" 
    max_size: "{{ asg_max_size }}"
    desired_capacity: "{{ asg_desired_capacity }}"
    region: "{{ region }}"
    vpc_zone_identifier: "{{ ms_subnet_id }}"
    tags:
      - Name: "{{ name_tag }}"
        propagate_at_launch: yes

- name: detach old instance so that new one is created but old one is still working and in haproxy
  command: aws autoscaling detach-instances --instance-ids {{ item.instance_id }} --auto-scaling-group-name {{ asg_name }} --no-should-decrement-desired-capacity
  with_items: "{{ asgs.results[0].instances }}"

- name: wait until new instance is up
  ec2_asg_facts:
    name: "{{ asg_name }}"
  register: new_asg
  until: new_asg.results[0].instances|length > 0 and new_asg.results[0].instances[0].lifecycle_state == "InService"
  retries: 10
  delay: 30
  ignore_errors: yes

- name: kill old instance only after new instance is up
  ec2:
    state: "absent"
    instance_ids: "{{ item.instance_id }}"
    region: "{{ region }}"
    vpc_subnet_id: "{{ image_building_subnet_id }}"
  with_items: "{{ asgs.results[0].instances }}"
